services:
  php:
    image: tugboatqa/php:8.1-apache
    default: true
    depends: drupal
    commands:
      init:
        # Install php extensions and mod-rewrite
        - apt-get -y update
        - apt-get install -y libicu-dev
        - apt-get install -y libzip-dev
        - docker-php-ext-configure intl
        - docker-php-ext-install opcache intl zip bcmath gettext pcntl mysqli
        - a2enmod headers rewrite

        # Link the document root to the expected path.
        - ln -snf $TUGBOAT_ROOT/httpdocs $DOCROOT

        # Set memory limit
        - echo "memory_limit = 2G" >> /usr/local/etc/php/conf.d/my-php.ini

        # Update composer
        - composer self-update

        # Install cv
        - curl -LsS https://download.civicrm.org/cv/cv.phar -o /usr/local/bin/cv
        - chmod +x /usr/local/bin/cv

        # Create the Drupal private and public files directories if they aren't
        # already present.
        - mkdir -p "${TUGBOAT_ROOT}/private" "${DOCROOT}/sites/default/files"

        # Manually create CiviCRM directories
        # Need to avoid flushing early which triggers potential managed entity issues.
        - mkdir -p "${DOCROOT}/sites/default/files/civicrm"
        - mkdir -p "${DOCROOT}/sites/default/files/civicrm/custom"
        - mkdir -p "${DOCROOT}/sites/default/files/civicrm/persist"
        - mkdir -p "${DOCROOT}/sites/default/files/civicrm/persist/contribute"
        - mkdir -p "${DOCROOT}/sites/default/files/civicrm/upload"
        - mkdir -p "${TUGBOAT_ROOT}/private/civicrm"
        - mkdir -p "${TUGBOAT_ROOT}/private/civicrm/ConfigAndLog"
        - mkdir -p "${TUGBOAT_ROOT}/private/civicrm/templates_c"
        - mkdir -p "${TUGBOAT_ROOT}/private/civicrm/templates_c/en_US"
      update:
        # Use the tugboat-specific Drupal and CiviCRM settings.
        - cp "${TUGBOAT_ROOT}/.tugboat/settings.local.php" "${DOCROOT}/sites/default/"
        - cp "${TUGBOAT_ROOT}/.tugboat/civicrm.settings.local.php" "${DOCROOT}/sites/default/"

        # Install/update packages managed by composer, including drush.
        #- composer install --optimize-autoloader
        - composer install

        # Install Drupal
        - vendor/bin/drush site-install --account-name=admin --account-pass=123somethingpencil

        # Install CiviCRM
        - cv core:install --cwd="./httpdocs" --cms-base-url="${TUGBOAT_DEFAULT_SERVICE_URL}" -m -v -K --db=mysql://tugboat:tugboat@civicrm:3306/tugboat

        # Protect settings files
        - chmod 0444 ${DOCROOT}/sites/default/settings.*
        - chmod 0444 ${DOCROOT}/sites/default/civicrm.settings.*

        # Make file directories web-writable.
        - chgrp -R www-data "${DOCROOT}/sites/default/files"
        - chgrp -R www-data "${TUGBOAT_ROOT}/private"

        # hopefully deal with file permissions for Civi
        - chown -R www-data:www-data "${DOCROOT}/sites/default/files/civicrm"

        # Public files
        - find "${DOCROOT}/sites/default/files" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files" -type f -exec chmod 0664 {} \;

        # Private files
        - find "${TUGBOAT_ROOT}/private" -type d -exec chmod 2775 {} \;
        - find "${TUGBOAT_ROOT}/private" -type f -exec chmod 0664 {} \;
      build:
        - vendor/bin/drush cache:rebuild
        - vendor/bin/drush config:import -y
        - vendor/bin/drush updatedb -y

        # Upgrade CiviCRM core if upgraded
        - cv upgrade:db --cwd="${DOCROOT}"
        # Upgrade extensions
        - cv ext:upgrade-db --cwd="${DOCROOT}"
        # Flush Civi cache (will also rebuild managed entities)
        - cv flush --triggers --cwd="${DOCROOT}"

        - vendor/bin/drush cache:rebuild
  # The 'drupal' key acts as the hostname.
  drupal:
    image: tugboatqa/mariadb:10

    # A set of commands to run while building this service
    # commands:
      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      # update:
        # Copy a database dump from an external server. The public
        # SSH key found in the Tugboat Repository configuration must be
        # copied to the external server in order to use scp.
        # Drupal
        # - scp dev@freeform.dev:~/private/drupal.sql.gz /tmp/drupal.sql.gz
        # - zcat /tmp/drupal.sql.gz | mysql tugboat
        # - rm /tmp/drupal.sql.gz
  civicrm:
    image: tugboatqa/mariadb:10
    # A set of commands to run while building this service
    # commands:
      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      # update:
        # Drop database and recreate so no tables hanging around.
        # - mysql -e 'DROP DATABASE IF EXISTS tugboat; CREATE DATABASE tugboat;'
        # CiviCRM
        # - scp dev@freeform.dev:~/private/civicrm.sql.gz /tmp/civicrm.sql.gz
        # - zcat /tmp/civicrm.sql.gz | mysql tugboat
        # - rm /tmp/civicrm.sql.gz
